test_SRC_DIR := testcase/src
test_INC_DIR := testcase/include
test_OBJ_DIR := obj/testcase

test_CFILES := $(test_SRC_DIR)/$(TESTCASE).c
test_SFILES := $(test_SRC_DIR)/start.S
test_COBJS := $(patsubst $(test_SRC_DIR)/%.c, $(test_OBJ_DIR)/%.o, $(test_CFILES))
test_SOBJS := $(patsubst $(test_SRC_DIR)/%.S, $(test_OBJ_DIR)/%.o, $(test_SFILES))

test_OBJS := $(test_SOBJS) $(test_COBJS)

test_CFLAGS := -c -m32 -Wall -Werror -MMD -fno-builtin -fno-stack-protector -O0 -I$(test_INC_DIR) -I$(LIB_COMMON_DIR) -I$(LIB_APP_DIR)
test_LDFLAGS := -m elf_i386 -e _start

test_BIN := obj/testcase/testcase

$(test_OBJ_DIR)/%.o:$(test_SRC_DIR)/%.[cS]
	@mkdir -p $(@D)
	@echo + $<
	@$(CC) $(test_CFLAGS) $< -o $@

$(test_BIN): $(test_OBJS) $(LIB_COMMON) $(LIB_APP)
	@mkdir -p $(@D)
	@ld $(test_LDFLAGS) $^ -o $@

.PHONY: test-asm test-elf clean-test

test-asm:
	@objdump -d $(test_BIN) > $(test_BIN).S
	@vim $(test_BIN).S

test-elf:
	@readelf -a $(test_BIN) > $(test_BIN).elf
	@vim $(test_BIN).elf

clean-test:
	@rm -rf $(test_OBJ_DIR)
